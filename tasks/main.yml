---
# tasks file for ansible-role-deploy-key
- name: Assertions
  assert:
    that:
        - ansible_os_family in ['OpenBSD', 'Debian']
        - deploy_key is defined
        - deploy_key_user is defined
        - deploy_key_repos is iterable

- name: Get passwd
  getent:
      database: passwd

- name: APT install # acl for running modules with a limited user
  when: ansible_pkg_mgr == 'apt'
  apt:
      name: [acl, git, ssh-client]
      state: present
      update_cache: yes
      cache_valid_time: 3600

- name: pkg add
  when: ansible_pkg_mgr == 'openbsd_pkg'
  openbsd_pkg:
      name: git
      state: present

- name: Copy the deployment key
  copy:
      content: '{{ deploy_key }}'
      owner: '{{ deploy_key_user }}'
      group: '{{ getent_passwd[deploy_key_user][2] }}'
      mode: 0o0400
      dest: /etc/ssh/deploy.key

- name: Configure SSH to use the deploy key
  with_items: '{{ deploy_key_repos }}'
  blockinfile:
      dest: /etc/ssh/ssh_config
      state: present
      marker: '#{mark} ANSIBLE MANAGED BLOCK {{ item }}'
      block: |
          Host {{ item }}
          HostName {{ item }}
          User git
          IdentityFile /etc/ssh/deploy.key

- name: Get hosts keys
  with_items: '{{ deploy_key_repos }}'
  command: ssh-keyscan {{ item }}
  register: deploy_key_ssh_keyscan
  changed_when: False
  become: False
  check_mode: no

- name: Add known hosts
  with_items: '{{ deploy_key_ssh_keyscan.results }}'
  known_hosts:
      key: '{{ item.stdout }}'
      state: present
      name: '{{ item.item }}'
      path: /etc/ssh/ssh_known_hosts

- name: Set premissions for the known hosts file
  file:
      path: /etc/ssh/ssh_known_hosts
      owner: root
      group: 0
      mode: 0o0644
      state: file
